class Solution {
private:
    bool isSum(vector<int>arr, int sum, int n){
        if(sum<0 || n<0)return false;
        vector<bool> prev((2*sum)+1, false);
        vector<bool> curr((2*sum)+1, false);
        curr[0] = prev[0] = true;
        prev[arr[0]] = true;
        for(int i = 1; i<=n; i++){
            for(int j = 1; j<=sum; j++){
                curr[j] = prev[j] || (j-arr[i]>=0?prev[j-arr[i]]:false);
            }prev = curr;
        }return prev[sum];
    }
public:
    bool canPartition(vector<int>& nums) {
        if(nums.size()==1)return false;
        int sum = 0;
        for(int i = 0; i<nums.size(); i++){
            sum=sum+nums[i];
        }if(sum%2!=0)return false;
        return isSum(nums, sum/2, nums.size()-1);
    }
};
